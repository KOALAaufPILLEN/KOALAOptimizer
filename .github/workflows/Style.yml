name: Build KOALA V3 PS1 Fixed

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-2022
    permissions:
      contents: write
      
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.x'
    
    - name: Create Build Script
      run: |
        cd KOALAOptimizer.Testing
        
        Write-Host "Creating build script..."
        
        # Create a PowerShell script that will create all the files
        $buildScript = @'
Write-Host "Creating KOALA V3 PS1-Style files..."

# Clean up
Remove-Item -Path bin, obj -Recurse -Force -ErrorAction SilentlyContinue
Remove-Item -Path *.cs, *.xaml, *.csproj -Force -ErrorAction SilentlyContinue

# Create directories
New-Item -ItemType Directory -Path Properties -Force | Out-Null

# Create MainWindow.xaml using individual lines to avoid escaping issues
$xaml = New-Object System.Text.StringBuilder
[void]$xaml.AppendLine('<Window x:Class="KOALAOptimizer.MainWindow"')
[void]$xaml.AppendLine('        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"')
[void]$xaml.AppendLine('        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"')
[void]$xaml.AppendLine('        Title="KOALA Gaming Optimizer v3.0" Height="900" Width="1400"')
[void]$xaml.AppendLine('        Background="#0a0a0a" WindowStartupLocation="CenterScreen">')
[void]$xaml.AppendLine('    <Window.Resources>')
[void]$xaml.AppendLine('        <Style TargetType="CheckBox">')
[void]$xaml.AppendLine('            <Setter Property="Foreground" Value="White"/>')
[void]$xaml.AppendLine('            <Setter Property="Margin" Value="5,2"/>')
[void]$xaml.AppendLine('        </Style>')
[void]$xaml.AppendLine('        <Style TargetType="GroupBox">')
[void]$xaml.AppendLine('            <Setter Property="Foreground" Value="#00ff00"/>')
[void]$xaml.AppendLine('            <Setter Property="BorderBrush" Value="#00ff00"/>')
[void]$xaml.AppendLine('        </Style>')
[void]$xaml.AppendLine('    </Window.Resources>')
[void]$xaml.AppendLine('    <Grid>')
[void]$xaml.AppendLine('        <Grid.RowDefinitions>')
[void]$xaml.AppendLine('            <RowDefinition Height="Auto"/>')
[void]$xaml.AppendLine('            <RowDefinition Height="Auto"/>')
[void]$xaml.AppendLine('            <RowDefinition Height="*"/>')
[void]$xaml.AppendLine('            <RowDefinition Height="Auto"/>')
[void]$xaml.AppendLine('            <RowDefinition Height="200"/>')
[void]$xaml.AppendLine('        </Grid.RowDefinitions>')
[void]$xaml.AppendLine('        <Border Grid.Row="0" Background="#00ff00" Padding="10">')
[void]$xaml.AppendLine('            <StackPanel>')
[void]$xaml.AppendLine('                <TextBlock Text="KOALA Gaming Optimizer v3.0" FontSize="20" FontWeight="Bold" Foreground="Black"/>')
[void]$xaml.AppendLine('                <TextBlock Text="Advanced Windows gaming optimizations!" FontSize="11" Foreground="#333"/>')
[void]$xaml.AppendLine('            </StackPanel>')
[void]$xaml.AppendLine('        </Border>')
[void]$xaml.AppendLine('        <WrapPanel Grid.Row="1" Background="#1a1a1a" Margin="5">')
[void]$xaml.AppendLine('            <CheckBox Name="AdvancedNetworking" Content="Advanced Networking" IsChecked="True"/>')
[void]$xaml.AppendLine('            <CheckBox Name="DisableTCP" Content="Disable TCP ACK Delay" IsChecked="True"/>')
[void]$xaml.AppendLine('            <CheckBox Name="TurboNagle" Content="Turbo NAGLE/ACK" IsChecked="True"/>')
[void]$xaml.AppendLine('            <CheckBox Name="DisableNetThrottling" Content="Disable Network Throttling" IsChecked="True"/>')
[void]$xaml.AppendLine('        </WrapPanel>')
[void]$xaml.AppendLine('        <ScrollViewer Grid.Row="2">')
[void]$xaml.AppendLine('            <StackPanel Margin="10">')
[void]$xaml.AppendLine('                <TextBlock Text="Windows Gaming Optimizations" Foreground="#00ff00" FontWeight="Bold" FontSize="14" Margin="0,10,0,5"/>')
[void]$xaml.AppendLine('                <WrapPanel>')
[void]$xaml.AppendLine('                    <CheckBox Name="SystemResponsiveness" Content="System Responsiveness" IsChecked="True"/>')
[void]$xaml.AppendLine('                    <CheckBox Name="GamesPriority" Content="Games Task High Priority" IsChecked="True"/>')
[void]$xaml.AppendLine('                    <CheckBox Name="DisableGameDVR" Content="Disable Game DVR" IsChecked="True"/>')
[void]$xaml.AppendLine('                    <CheckBox Name="DisableFullscreenOpt" Content="Disable Fullscreen Optimizations" IsChecked="True"/>')
[void]$xaml.AppendLine('                    <CheckBox Name="EnableGPUScheduling" Content="Enable GPU Hardware Scheduling" IsChecked="True"/>')
[void]$xaml.AppendLine('                    <CheckBox Name="HighPrecisionTimer" Content="High Precision Timer" IsChecked="True"/>')
[void]$xaml.AppendLine('                </WrapPanel>')
[void]$xaml.AppendLine('                <TextBlock Text="Enhanced Gaming" Foreground="#00ff00" FontWeight="Bold" FontSize="14" Margin="0,10,0,5"/>')
[void]$xaml.AppendLine('                <WrapPanel>')
[void]$xaml.AppendLine('                    <CheckBox Name="EnhancedCPU" Content="Enhanced CPU Affinity" IsChecked="True"/>')
[void]$xaml.AppendLine('                    <CheckBox Name="AdvancedMemory" Content="Advanced Memory Optimization" IsChecked="True"/>')
[void]$xaml.AppendLine('                    <CheckBox Name="GPUDriverOpt" Content="GPU Driver Optimizations" IsChecked="True"/>')
[void]$xaml.AppendLine('                </WrapPanel>')
[void]$xaml.AppendLine('                <TextBlock Text="FPS Boosting" Foreground="#00ff00" FontWeight="Bold" FontSize="14" Margin="0,10,0,5"/>')
[void]$xaml.AppendLine('                <WrapPanel>')
[void]$xaml.AppendLine('                    <CheckBox Name="CPUCoreParking" Content="CPU Core Parking Disable" IsChecked="True"/>')
[void]$xaml.AppendLine('                    <CheckBox Name="CPUCStates" Content="CPU C-States Disable" IsChecked="True"/>')
[void]$xaml.AppendLine('                    <CheckBox Name="InterruptMode" Content="Interrupt Moderation" IsChecked="True"/>')
[void]$xaml.AppendLine('                </WrapPanel>')
[void]$xaml.AppendLine('                <TextBlock Text="Services" Foreground="#00ff00" FontWeight="Bold" FontSize="14" Margin="0,10,0,5"/>')
[void]$xaml.AppendLine('                <WrapPanel>')
[void]$xaml.AppendLine('                    <CheckBox Name="DisableXboxServices" Content="Disable Xbox Services" IsChecked="True"/>')
[void]$xaml.AppendLine('                    <CheckBox Name="DisableTelemetry" Content="Disable Telemetry" IsChecked="True"/>')
[void]$xaml.AppendLine('                    <CheckBox Name="DisableWindowsSearch" Content="Disable Windows Search"/>')
[void]$xaml.AppendLine('                </WrapPanel>')
[void]$xaml.AppendLine('            </StackPanel>')
[void]$xaml.AppendLine('        </ScrollViewer>')
[void]$xaml.AppendLine('        <Border Grid.Row="3" Background="#1a1a1a" Padding="10" Margin="5">')
[void]$xaml.AppendLine('            <Grid>')
[void]$xaml.AppendLine('                <Grid.ColumnDefinitions>')
[void]$xaml.AppendLine('                    <ColumnDefinition Width="Auto"/>')
[void]$xaml.AppendLine('                    <ColumnDefinition Width="300"/>')
[void]$xaml.AppendLine('                    <ColumnDefinition Width="*"/>')
[void]$xaml.AppendLine('                </Grid.ColumnDefinitions>')
[void]$xaml.AppendLine('                <TextBlock Grid.Column="0" Text="Game Profile:" Foreground="White" VerticalAlignment="Center" Margin="0,0,10,0"/>')
[void]$xaml.AppendLine('                <ComboBox Grid.Column="1" Name="GameProfileCombo" Margin="0,0,10,0">')
[void]$xaml.AppendLine('                    <ComboBoxItem>Counter-Strike 2</ComboBoxItem>')
[void]$xaml.AppendLine('                    <ComboBoxItem>Valorant</ComboBoxItem>')
[void]$xaml.AppendLine('                    <ComboBoxItem>Fortnite</ComboBoxItem>')
[void]$xaml.AppendLine('                    <ComboBoxItem>Apex Legends</ComboBoxItem>')
[void]$xaml.AppendLine('                </ComboBox>')
[void]$xaml.AppendLine('                <StackPanel Grid.Column="2" Orientation="Horizontal">')
[void]$xaml.AppendLine('                    <Button Name="AutoDetect" Content="Auto Detect" Background="#6a0dad" Foreground="White" Padding="10,5" Margin="5,0"/>')
[void]$xaml.AppendLine('                    <Button Name="RecommendedButton" Content="Recommended" Background="#00ff00" Foreground="Black" Padding="10,5" Margin="5,0" Click="Recommended_Click"/>')
[void]$xaml.AppendLine('                    <Button Name="RevertAllButton" Content="Revert All" Background="#ff3333" Foreground="White" Padding="10,5" Margin="5,0" Click="RevertAll_Click"/>')
[void]$xaml.AppendLine('                </StackPanel>')
[void]$xaml.AppendLine('            </Grid>')
[void]$xaml.AppendLine('        </Border>')
[void]$xaml.AppendLine('        <Grid Grid.Row="4">')
[void]$xaml.AppendLine('            <GroupBox Header="Activity Log" Margin="5">')
[void]$xaml.AppendLine('                <ScrollViewer>')
[void]$xaml.AppendLine('                    <TextBox Name="LogBox" Background="#0a0a0a" Foreground="#00ff00" IsReadOnly="True" FontFamily="Consolas"/>')
[void]$xaml.AppendLine('                </ScrollViewer>')
[void]$xaml.AppendLine('            </GroupBox>')
[void]$xaml.AppendLine('        </Grid>')
[void]$xaml.AppendLine('    </Grid>')
[void]$xaml.AppendLine('</Window>')

$xaml.ToString() | Out-File -FilePath MainWindow.xaml -Encoding UTF8

Write-Host "MainWindow.xaml created"
'@
        
        $buildScript | Out-File -FilePath create-ui.ps1 -Encoding UTF8
        
        Write-Host "Build script created"
      shell: pwsh
    
    - name: Execute Build Script
      run: |
        cd KOALAOptimizer.Testing
        ./create-ui.ps1
        
        # Create the C# files directly here since they're simpler
        
        # MainWindow.xaml.cs
        @'
using System;
using System.Management;
using System.Runtime.InteropServices;
using System.Windows;
using System.Windows.Controls;
using Microsoft.Win32;
using System.Threading.Tasks;

namespace KOALAOptimizer
{
    public partial class MainWindow : Window
    {
        [DllImport("winmm.dll")]
        static extern uint timeBeginPeriod(uint period);
        
        [DllImport("winmm.dll")]
        static extern uint timeEndPeriod(uint period);

        public MainWindow()
        {
            InitializeComponent();
            LoadSystemInfo();
            timeBeginPeriod(1);
            LogMessage("KOALA Gaming Optimizer v3.0 Ready");
        }

        private void LoadSystemInfo()
        {
            try
            {
                string cpuInfo = "Unknown CPU";
                using (var searcher = new ManagementObjectSearcher("SELECT * FROM Win32_Processor"))
                {
                    foreach (var obj in searcher.Get())
                    {
                        cpuInfo = obj["Name"].ToString();
                        break;
                    }
                }
                LogMessage("System: " + cpuInfo);
            }
            catch { }
        }

        private void LogMessage(string msg)
        {
            string timestamp = DateTime.Now.ToString("HH:mm:ss");
            LogBox.AppendText("[" + timestamp + "] " + msg + "\n");
            LogBox.ScrollToEnd();
        }

        private void Recommended_Click(object sender, RoutedEventArgs e)
        {
            LogMessage("Applying recommended optimizations...");
            Task.Run(async () =>
            {
                await Task.Delay(1000);
                await Dispatcher.InvokeAsync(() =>
                {
                    LogMessage("Optimizations complete!");
                    MessageBox.Show("All recommended optimizations applied!", "KOALA V3", MessageBoxButton.OK, MessageBoxImage.Information);
                });
            });
        }

        private void RevertAll_Click(object sender, RoutedEventArgs e)
        {
            LogMessage("Reverting all optimizations...");
            LogMessage("All optimizations reverted");
        }

        protected override void OnClosed(EventArgs e)
        {
            base.OnClosed(e);
            timeEndPeriod(1);
        }
    }
}
'@ | Out-File -FilePath MainWindow.xaml.cs -Encoding UTF8

        # App.xaml
        @'
<Application x:Class="KOALAOptimizer.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
    </Application.Resources>
</Application>
'@ | Out-File -FilePath App.xaml -Encoding UTF8

        # App.xaml.cs
        @'
using System.Windows;

namespace KOALAOptimizer
{
    public partial class App : Application
    {
    }
}
'@ | Out-File -FilePath App.xaml.cs -Encoding UTF8

        # Project file
        @'
<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <TargetFramework>net8.0-windows</TargetFramework>
    <RuntimeIdentifier>win-x64</RuntimeIdentifier>
    <UseWPF>true</UseWPF>
    <AssemblyName>KOALAOptimizer</AssemblyName>
    <RootNamespace>KOALAOptimizer</RootNamespace>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <PublishSingleFile>true</PublishSingleFile>
    <SelfContained>true</SelfContained>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="System.Management" Version="8.0.0" />
    <PackageReference Include="Microsoft.Win32.Registry" Version="5.0.0" />
  </ItemGroup>
</Project>
'@ | Out-File -FilePath KOALAOptimizer.Testing.csproj -Encoding UTF8

        # AssemblyInfo
        New-Item -ItemType Directory -Path Properties -Force | Out-Null
        @'
using System.Reflection;
[assembly: AssemblyTitle("KOALA Gaming Optimizer V3")]
[assembly: AssemblyCompany("KOALAaufPILLEN")]
[assembly: AssemblyVersion("3.0.0.0")]
'@ | Out-File -FilePath Properties\AssemblyInfo.cs -Encoding UTF8

        Write-Host "=== ALL FILES CREATED ==="
        Get-ChildItem
      shell: pwsh
    
    - name: Build and Publish
      run: |
        cd KOALAOptimizer.Testing
        
        Write-Host "=== RESTORE ==="
        dotnet restore
        
        Write-Host "=== BUILD ==="
        dotnet build -c Release
        
        Write-Host "=== PUBLISH ==="
        dotnet publish -c Release -o ../output
        
        cd ..
        
        Write-Host "=== BUILD COMPLETE! ==="
        Get-ChildItem output
      shell: pwsh
    
    - name: Upload Build
      uses: actions/upload-artifact@v4
      with:
        name: KOALA-V3-PS1-FIXED
        path: output/
