name: Build KOALA V3

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-2022
    permissions:
      contents: write
      
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.x'
    
    - name: Check Project Structure
      run: |
        echo "=== Root Directory ==="
        dir
        echo ""
        echo "=== KOALAOptimizer.Testing Directory ==="
        dir KOALAOptimizer.Testing
        echo ""
        echo "=== Looking for project files ==="
        dir KOALAOptimizer.Testing\*.csproj
        dir KOALAOptimizer.Testing\*.sln
      shell: cmd
    
    - name: Build and Package
      run: |
        echo "Building KOALA Optimizer V3..."
        cd KOALAOptimizer.Testing
        
        echo "Cleaning any previous builds..."
        if exist bin rmdir /s /q bin
        if exist obj rmdir /s /q obj
        
        echo "Building with specific project file..."
        dotnet restore KOALAOptimizer.Testing.csproj
        dotnet build KOALAOptimizer.Testing.csproj -c Release
        dotnet publish KOALAOptimizer.Testing.csproj -c Release -r win-x64 --self-contained -p:PublishSingleFile=true -o ..\output
        
        cd ..
        echo "Build complete! Output files:"
        dir output
      shell: cmd
    
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: KOALA-V3-Build
        path: output/
    
    - name: Create ZIP Release
      run: |
        powershell Compress-Archive -Path output\* -DestinationPath KOALA-V3.zip
        dir *.zip
    
    - name: Create GitHub Release
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      run: |
        gh release delete v3-latest -y 2>nul || echo "No previous release"
        gh release create v3-latest KOALA-V3.zip --title "KOALA V3 Latest Build" --notes "KOALA Gaming Optimizer V3 by KOALAaufPILLEN" --latest
      env:
        GH_TOKEN: ${{ github.token }}
      shell: cmd
      continue-on-error: true
