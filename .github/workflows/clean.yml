name: Force Clean Build

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-2022
    permissions:
      contents: write
      
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.x'
    
    - name: NUCLEAR CLEAN AND BUILD
      run: |
        cd KOALAOptimizer.Testing
        
        echo "=== FORCE DELETING ALL CACHE ==="
        rmdir /s /q bin 2>nul
        rmdir /s /q obj 2>nul
        rmdir /s /q .vs 2>nul
        del *.user 2>nul
        
        echo.
        echo "=== REMOVING ALL PROJECT FILES ==="
        del *.csproj 2>nul
        del *.sln 2>nul
        
        echo.
        echo "=== CREATING NEW PROJECT WITH GenerateAssemblyInfo=false ==="
        (
          echo ^<Project Sdk="Microsoft.NET.Sdk"^>
          echo   ^<PropertyGroup^>
          echo     ^<OutputType^>WinExe^</OutputType^>
          echo     ^<TargetFramework^>net8.0-windows^</TargetFramework^>
          echo     ^<UseWPF^>true^</UseWPF^>
          echo     ^<AssemblyName^>KOALAOptimizer^</AssemblyName^>
          echo     ^<RootNamespace^>KOALAOptimizer^</RootNamespace^>
          echo     ^<ApplicationIcon^>koala.ico^</ApplicationIcon^>
          echo     ^<GenerateAssemblyInfo^>false^</GenerateAssemblyInfo^>
          echo   ^</PropertyGroup^>
          echo ^</Project^>
        ) > KOALAOptimizer.Testing.csproj
        
        echo.
        echo "=== CREATING AssemblyInfo.cs ==="
        if not exist Properties mkdir Properties
        (
          echo using System.Reflection;
          echo using System.Runtime.InteropServices;
          echo [assembly: AssemblyTitle^("KOALA Optimizer"^)]
          echo [assembly: AssemblyCompany^("KOALAaufPILLEN"^)]
          echo [assembly: AssemblyProduct^("KOALA V3"^)]
          echo [assembly: AssemblyVersion^("3.0.0.0"^)]
          echo [assembly: AssemblyFileVersion^("3.0.0.0"^)]
          echo [assembly: AssemblyConfiguration^(""^)]
          echo [assembly: ComVisible^(false^)]
        ) > Properties\AssemblyInfo.cs
        
        echo.
        echo "=== CLEAN BUILD ==="
        dotnet build -c Release
        
        echo.
        echo "=== PUBLISH ==="
        dotnet publish -c Release -r win-x64 --self-contained -p:PublishSingleFile=true -o ..\output
        
        cd ..
        
        echo.
        echo "=== SUCCESS! FILES: ==="
        dir output
      shell: cmd
    
    - name: Upload Success
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: KOALA-SUCCESS-${{ github.run_number }}
        path: output/
    
    - name: Create Release
      if: success()
      run: |
        powershell Compress-Archive -Path output\KOALAOptimizer.exe -DestinationPath KOALA-FINAL.zip
        gh release delete final -y 2>nul
        gh release create final KOALA-FINAL.zip --title "üê® KOALA V3 FINAL" --notes "Working build!" --latest
      env:
        GH_TOKEN: ${{ github.token }}
      continue-on-error: true
