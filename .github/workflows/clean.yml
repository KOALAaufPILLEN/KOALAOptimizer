name: Final Complete Build

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-2022
    permissions:
      contents: write
      
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.x'
    
    - name: BUILD AND PUBLISH SUCCESSFULLY
      run: |
        cd KOALAOptimizer.Testing
        
        echo "=== CLEANING ==="
        rmdir /s /q bin 2>nul
        rmdir /s /q obj 2>nul
        del *.csproj 2>nul
        
        echo.
        echo "=== CREATING PROJECT WITH RUNTIME IDENTIFIER ==="
        (
          echo ^<Project Sdk="Microsoft.NET.Sdk"^>
          echo   ^<PropertyGroup^>
          echo     ^<OutputType^>WinExe^</OutputType^>
          echo     ^<TargetFramework^>net8.0-windows^</TargetFramework^>
          echo     ^<RuntimeIdentifier^>win-x64^</RuntimeIdentifier^>
          echo     ^<UseWPF^>true^</UseWPF^>
          echo     ^<AssemblyName^>KOALAOptimizer^</AssemblyName^>
          echo     ^<RootNamespace^>KOALAOptimizer^</RootNamespace^>
          echo     ^<ApplicationIcon^>koala.ico^</ApplicationIcon^>
          echo     ^<GenerateAssemblyInfo^>false^</GenerateAssemblyInfo^>
          echo     ^<PublishSingleFile^>true^</PublishSingleFile^>
          echo     ^<SelfContained^>true^</SelfContained^>
          echo   ^</PropertyGroup^>
          echo   ^<ItemGroup^>
          echo     ^<PackageReference Include="System.Management" Version="8.0.0" /^>
          echo     ^<PackageReference Include="Microsoft.Win32.Registry" Version="5.0.0" /^>
          echo   ^</ItemGroup^>
          echo ^</Project^>
        ) > KOALAOptimizer.Testing.csproj
        
        echo.
        echo "=== CREATING AssemblyInfo ==="
        if not exist Properties mkdir Properties
        (
          echo using System.Reflection;
          echo using System.Runtime.InteropServices;
          echo [assembly: AssemblyTitle^("KOALA Optimizer V3"^)]
          echo [assembly: AssemblyCompany^("KOALAaufPILLEN"^)]
          echo [assembly: AssemblyProduct^("KOALA Gaming Optimizer"^)]
          echo [assembly: AssemblyVersion^("3.0.0.0"^)]
          echo [assembly: AssemblyFileVersion^("3.0.0.0"^)]
          echo [assembly: AssemblyConfiguration^(""^)]
          echo [assembly: ComVisible^(false^)]
        ) > Properties\AssemblyInfo.cs
        
        echo.
        echo "=== RESTORE ==="
        dotnet restore
        
        echo.
        echo "=== BUILD ==="
        dotnet build -c Release
        
        echo.
        echo "=== PUBLISH ==="
        dotnet publish -c Release -o ..\output
        
        cd ..
        
        echo.
        echo "=== ‚úÖ SUCCESS! OUTPUT FILES: ==="
        dir output
      shell: cmd
    
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: KOALA-V3-WORKING-BUILD
        path: output/
    
    - name: Create Release Package
      run: |
        cd output
        echo Files in output:
        dir
        
        if exist KOALAOptimizer.exe (
          echo Found KOALAOptimizer.exe!
        ) else (
          echo Renaming first exe found...
          for %%f in (*.exe) do (
            ren "%%f" KOALAOptimizer.exe
            goto :done
          )
          :done
        )
        
        cd ..
        powershell Compress-Archive -Path output\* -DestinationPath KOALA-V3-COMPLETE.zip
        
        echo.
        echo "üê® KOALA V3 BUILD COMPLETE!"
        dir *.zip
      shell: cmd
    
    - name: Create GitHub Release
      if: success()
      run: |
        gh release delete v3.0.0 -y 2>nul
        gh release create v3.0.0 KOALA-V3-COMPLETE.zip --title "üê® KOALA V3.0.0 - WORKING!" --notes "KOALA Gaming Optimizer V3 by KOALAaufPILLEN - Finally Working!" --latest
      env:
        GH_TOKEN: ${{ github.token }}
      continue-on-error: true
