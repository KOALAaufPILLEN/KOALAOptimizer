name: Build KOALA V3 Simple

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-2022
    permissions:
      contents: write
      
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.x'
    
    - name: Build KOALA V3
      run: |
        cd KOALAOptimizer.Testing
        
        # Clean
        Remove-Item -Path bin, obj -Recurse -Force -ErrorAction SilentlyContinue
        Remove-Item -Path *.cs, *.xaml, *.csproj -Force -ErrorAction SilentlyContinue
        
        # Download files from gist or create simple versions
        # Using Invoke-WebRequest to get files from a URL would be cleaner
        
        # For now, create minimal working files
        Write-Host "Creating project files..."
        
        # Create a simple build script first
        $buildScript = 'Write-Host "Building KOALA V3..."'
        $buildScript | Out-File -FilePath build.ps1
        
        # Download or create the actual files
        # This avoids inline YAML issues
        
        Write-Host "Downloading source files..."
        
        # Option 1: Download from GitHub (if files exist there)
        # Invoke-WebRequest -Uri "https://raw.githubusercontent.com/KOALAaufPILLEN/KOALAOptimizer/main/MainWindow.xaml" -OutFile MainWindow.xaml
        
        # Option 2: Create files using a separate PowerShell script
        Invoke-WebRequest -Uri "https://gist.githubusercontent.com/KOALAaufPILLEN/YOUR_GIST_ID/raw/create-koala-files.ps1" -OutFile create-files.ps1 -ErrorAction SilentlyContinue
        
        if (Test-Path create-files.ps1) {
            ./create-files.ps1
        } else {
            Write-Host "Creating default files..."
            # Create minimal files here
        }
        
        Write-Host "Files created"
      shell: pwsh
    
    - name: Create Source Files
      run: |
        cd KOALAOptimizer.Testing
        
        # Create files without complex inline content
        New-Item -ItemType File -Path MainWindow.xaml -Force
        New-Item -ItemType File -Path MainWindow.xaml.cs -Force
        New-Item -ItemType File -Path App.xaml -Force
        New-Item -ItemType File -Path App.xaml.cs -Force
        New-Item -ItemType File -Path KOALAOptimizer.Testing.csproj -Force
        
        # Write content to files separately
        ./write-xaml.ps1
        ./write-cs.ps1
        ./write-project.ps1
      shell: pwsh
      continue-on-error: true
    
    - name: Setup Project Files Using Script
      run: |
        cd KOALAOptimizer.Testing
        
        # Create the setup script
        @'
        # This script creates all project files
        Write-Host "Setting up KOALA V3 project..."
        '@ > setup.ps1
        
        # Run it
        ./setup.ps1
      shell: pwsh
    
    - name: Build and Publish
      run: |
        cd KOALAOptimizer.Testing
        
        Write-Host "=== RESTORE ==="
        dotnet restore
        
        Write-Host "=== BUILD ==="
        dotnet build -c Release
        
        Write-Host "=== PUBLISH ==="
        dotnet publish -c Release -o ../output
        
        cd ..
        
        Write-Host "=== BUILD COMPLETE ==="
        Get-ChildItem output
      shell: pwsh
    
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: KOALA-V3
        path: output/
