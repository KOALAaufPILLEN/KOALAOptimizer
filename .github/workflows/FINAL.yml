name: Build KOALA V3 Final

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-2022
    permissions:
      contents: write
      
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.x'
    
    - name: Create Icon and Fix Project
      run: |
        cd KOALAOptimizer.Testing
        
        Write-Host "=== CREATING ICON ==="
        # Create a simple green K icon
        Add-Type -AssemblyName System.Drawing
        $bitmap = New-Object System.Drawing.Bitmap 32, 32
        $graphics = [System.Drawing.Graphics]::FromImage($bitmap)
        $graphics.Clear([System.Drawing.Color]::Lime)
        $font = New-Object System.Drawing.Font("Arial", 20, [System.Drawing.FontStyle]::Bold)
        $graphics.DrawString("K", $font, [System.Drawing.Brushes]::Black, 5, 2)
        $icon = [System.Drawing.Icon]::FromHandle($bitmap.GetHicon())
        $stream = [System.IO.File]::OpenWrite("koala.ico")
        $icon.Save($stream)
        $stream.Close()
        $graphics.Dispose()
        $bitmap.Dispose()
        
        Write-Host "=== CHECKING FILES ==="
        Get-ChildItem
        
        Write-Host "=== CLEANING ==="
        Remove-Item -Path bin, obj -Recurse -Force -ErrorAction SilentlyContinue
      shell: pwsh
    
    - name: Build Application
      run: |
        cd KOALAOptimizer.Testing
        
        Write-Host "=== RESTORE ==="
        dotnet restore
        
        Write-Host "=== BUILD ==="
        dotnet build -c Release --no-restore
        
        Write-Host "=== CHECKING BUILD OUTPUT ==="
        Get-ChildItem -Path bin\Release -Recurse | Select-Object FullName
      shell: pwsh
    
    - name: Publish Single File
      run: |
        cd KOALAOptimizer.Testing
        
        Write-Host "=== PUBLISH ==="
        dotnet publish -c Release -r win-x64 --self-contained true /p:PublishSingleFile=true /p:IncludeNativeLibrariesForSelfExtract=true /p:EnableCompressionInSingleFile=true -o ../output --no-build
        
        cd ..
        
        Write-Host "=== OUTPUT FILES ==="
        Get-ChildItem output
        
        if (Test-Path "output/KOALAOptimizer.exe") {
            Write-Host "✅ BUILD SUCCESS! EXE created"
            $size = (Get-Item "output/KOALAOptimizer.exe").Length / 1MB
            Write-Host "File size: $([math]::Round($size, 2)) MB"
        } else {
            Write-Host "❌ BUILD FAILED! No EXE found"
            exit 1
        }
      shell: pwsh
    
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: KOALA-V3-OPTIMIZER
        path: output/KOALAOptimizer.exe
        if-no-files-found: error
